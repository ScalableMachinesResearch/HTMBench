#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
# 
# This file implements additional tests of the SQLITE_USER_AUTHENTICATION 
# extension.
#

set testdir [file dirname $argv0]/../../lang/sql/sqlite/test
source $testdir/tester.tcl
set testprefix userauth-ext-common

ifcapable !userauth {
  finish_test
  return
}

# SQLite tests by default provide a predefined key when opening a database
# connection if encryption is enabled. Disable this for our tests.
#
do_not_use_codec

# Enable encryption
#
sqlite3_key db key

# Test behavior on an empty database
do_test userauth-ext-common-1.1 {
  sqlite3_user_change db alice pw-4-alice 1 
} {SQLITE_AUTH}

do_test userauth-ext-common-1.2 {
  sqlite3_user_delete db alice
} {SQLITE_AUTH}

# For a no-authentication-required database, sqlite3_user_authenticate()
# returns SQLITE_AUTH.
do_test userauth-ext-common-1.3 {
  sqlite3_user_authenticate db alice anypwd
} {SQLITE_AUTH}

do_test userauth-ext-common-1.4 {
  sqlite3_user_change db bob anypwd 1
} {SQLITE_AUTH}

do_test userauth-ext-common-1.5 {
  sqlite3_user_delete db bob
} {SQLITE_AUTH}

# Create a no-authentication-required database
#
do_execsql_test userauth-ext-common-2.0 {
  CREATE TABLE t1(x);
  INSERT INTO t1 VALUES(1),(2.5),('three'),(x'4444'),(NULL);
  SELECT quote(x) FROM t1 ORDER BY x;
  SELECT name FROM sqlite_master;
} {NULL 1 2.5 'three' X'4444' t1}

# For a no-authentication-required database, sqlite3_user_authenticate()
# returns SQLITE_AUTH.
do_test userauth-ext-common-2.1 {
  sqlite3_user_authenticate db alice anypwd
} {SQLITE_AUTH}

do_test userauth-ext-common-2.2 {
  sqlite3_user_change db bob anypwd 1
} {SQLITE_AUTH}

do_test userauth-ext-common-2.3 {
  sqlite3_user_delete db bob
} {SQLITE_AUTH}

# When called on a no-authentication-required
# database and when A is true, the sqlite3_user_add(D,U,P,N,A) routine
# converts the database into an authentication-required database and
# logs the database connection D in using user U with password P,N.
#  
do_test userauth-ext-common-2.4 {
  sqlite3_user_add db alice pw-4-alice 1
} {SQLITE_OK}

do_test userauth-ext-common-2.5 {
  sqlite3 db2 test.db
  sqlite3_key db2 key
  catchsql {
    SELECT quote(x) FROM t1 ORDER BY x;
  } db2
} {1 {user not authenticated}}

do_test userauth-ext-common-2.6 {
  sqlite3_user_authenticate db2 alice pw-4-alice
} {SQLITE_OK}

do_execsql_test userauth-ext-common-2.7 {
  SELECT quote(x) FROM t1 ORDER BY x;
} {NULL 1 2.5 'three' X'4444'}


finish_test